import React, { useEffect, useState } from "react";

function Report() {
  const [results, setResults] = useState([]);
  const [message, setMessage] = useState("");

  useEffect(() => {
    const storedUser = localStorage.getItem("user");
    if (!storedUser) {
      setMessage("ðŸš¨ No user found in local storage.");
      return;
    }

    let user;
    try {
      user = JSON.parse(storedUser);
    } catch (err) {
      console.error("Failed to parse user from localStorage:", err);
      setMessage("ðŸš¨ Invalid user data.");
      return;
    }

    const { role, id } = user;
    let url = "";

    if (role === "athlete") {
      url = `http://localhost:8080/api/results/athlete/${id}`;
    } else if (role === "coach") {
      url = `http://localhost:8080/api/results/coach/${id}`;
    } else {
      setMessage("ðŸš¨ Unsupported role.");
      return;
    }

    fetch(url)
      .then((res) => {
        if (!res.ok) throw new Error("Failed to fetch results");
        return res.json();
      })
      .then((data) => {
        // Ensure results are always an array
        setResults(Array.isArray(data) ? data : [data]);
      })
      .catch((err) => {
        console.error(err);
        setMessage("ðŸš¨ Failed to fetch results.");
      });
  }, []);

  if (message) return <p>{message}</p>;

  if (results.length === 0) return <p>No reports found.</p>;

  return (
    <div className="report-list scroll-section">
      <p className="field-heading">Report Generated by AI</p>
      {results.map((result) => (
        <div key={result.id} className="report-card">
          <p className="field-heading">
            Video: {result.video?.fileName || "N/A"}
          </p>
          <p>Coach: {result.coach?.user?.fullname || "N/A"}</p>
          <p>Athlete: {result.athlete?.user?.fullname || "N/A"}</p>
          <p>Percentile: {result.percentile || "N/A"}</p>
          <p>Injury Risk: {result.injuryRisk || "N/A"}</p>
          <p>Recommendations: {result.recommendations || "N/A"}</p>
          <p>Comments: {result.comments || "N/A"}</p>
          <p>Badges: {result.badges || 0}</p>
          <p>Created At: {result.createdAt || "N/A"}</p>
        </div>
      ))}
    </div>
  );
}

export default Report;
